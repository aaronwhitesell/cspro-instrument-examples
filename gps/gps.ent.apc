{ Application 'gps' logic file generated by CSPro }
PROC GLOBAL

// ------------------
// ------------------ Global variables
// ------------------

numeric gpsReadDuration = 10;
numeric gpsReadAttempted = false;

PROC GPS_FF

PROC TAKE_GPS_READING

onfocus

	TAKE_GPS_READING = notappl;

	if getos() = 10 then
		setvalueset($, WINDOWS_GPS_VS);
	else
		numeric has_housing_gps = false;
			
		if H_LATITUDE <> notappl and H_LONGITUDE <> notappl then
			has_housing_gps = true;
		endif;

		if has_housing_gps or gpsReadAttempted then
			setvalueset($, EXISTING_GPS_VS);
		else
			setvalueset($, BLANK_GPS_VS);
		endif;
		
	endif;
	
postproc
	
	if $ in 1:2 then
		string gpsTitle = maketext("GPS reading for housing unit #%v", HOUSEHOLD_ID);
			
		numeric start_time = timestamp();
		numeric result = gps(readInteractive, baseMap := None, readDuration := gpsReadDuration, message := gpsTitle);
		numeric end_time = timestamp();
			
		if result = -1 then
			// cancelled
			reenter;
		elseif result = 0 then
			// failed attempt
			gpsReadAttempted = true;
			reenter;
		elseif end_time - start_time < gpsReadDuration then
			errmsg("The GPS read attempt must last the full duration.");
			reenter;
		else
			// successful attempt
			gpsReadAttempted = true;
			
			H_LATITUDE = gps(latitude);
			H_LONGITUDE = gps(longitude);
			H_ALTITUDE = gps(altitude);
			H_ACCURACY = gps(accuracy);
			H_SATELLITES = gps(satellites);
			H_READTIME = gps(readtime);
						
			errmsg("GPS reading for housing unit: %v was updated", HOUSEHOLD_ID);
		endif;
		
	endif;
	
